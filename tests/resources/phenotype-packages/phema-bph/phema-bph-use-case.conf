execution {
    // Can be 'counts' or 'patients'
    returnType = "counts"

    // Can be 'optimized' or 'debug'
    executionMode = "optimized"

    // Can be 'i2b2' or 'ohdsi'
    engine = "i2b2"

    umls {
        login = ""
        password = ""
    }

    valueSets = [
      { type = "File", path = "phema-bph-use-case.csv", format = "CSV" }
    ]

    i2b2 {
        projectManagementUrl = "http://172.16.51.215:9090/i2b2/services/PMService/"
        domain = "i2b2demo"
        project = "Demo"
        login = "demo"
        password = "demouser"

        // The mapping rules provide general strategies to create a map from the value set
        // term and the i2b2 ontology term
        valueSetMapping {
            // Rules defined for a terminology will apply globally across all value sets
            terminologyRule {
                sourceTerminologyName = "ICD10CM"
                destinationTerminology {
                    // If not specified, it will use the sourceTerminologyName
                    prefix = "ICD10CM"
                    // If not specified, it defaults to a colon (":")
                    delimiter = ":"
                    // If not specified, it uses the exact code from the value set.
                    // Otherwise, it uses a regular expression replacement.
                    // This example takes G12.2 -> G122
                    codeReplace {
                        match = "([^\\.]*)\\.(.*)"
                        replaceWith = "$1$2"
                    }
                }
            }

            // Rules defined for a value set will apply to a specific value set, as noted
            // by the OID
            valueSetRule {
                valueSetOid = "1.2.3.4"
            }

            // This file provides specific maps from a single value set term to one or more
            // i2b2 concepts.  This is run after the mapping rules (if any exist) are run, and
            // override or supplement any mappings already established.
            overrideRule {
                fileName = ""
            }
        }
    }
}